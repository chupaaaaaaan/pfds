# Proof of O(nk)

To detect each n numbers being the member of the first k numbers,
we have to compare at most to the first k members of the sorted list.
(It's not necessary to compare to the rest members of the sorted list.)
So, sort xs takes O(nk) time.

# Simulation of lazy evaluation.

## Given expression
take 2 (insertionSort [5,1,3,4,2])

## Extracting foldl
take 2 (foldl ins [] [5,1,3,4,2])
take 2 (foldl ins (ins [] 5) [1,3,4,2])
take 2 (foldl ins (ins (ins [] 5) 1) [3,4,2])
take 2 (foldl ins (ins (ins (ins [] 5) 1) 3) [4,2])
take 2 (foldl ins (ins (ins (ins (ins [] 5) 1) 3) 4) [2])
take 2 (foldl ins (ins (ins (ins (ins (ins [] 5) 1) 3) 4) 2) [])
take 2 (ins (ins (ins (ins (ins [] 5) 1) 3) 4) 2)

## Loop to detect the 1st. element
take 2 (ins (ins (ins (ins (5 : []) 1) 3) 4) 2)
take 2 (ins (ins (ins (1 : (5 : [])) 3) 4) 2)
take 2 (ins (ins (1 : (ins (5 : []) 3)) 4) 2)
take 2 (ins (1 : (ins (ins (5 : []) 3) 4)) 2)
take 2 (1 : (ins (ins (ins (5 : []) 3) 4) 2))

## Loop to detect the 2nd. element
1 : (take 1 (ins (ins (ins (5 : []) 3) 4) 2))
1 : (take 1 (ins (ins (3 : (5 : [])) 4) 2))
1 : (take 1 (ins (3 : (ins (5 : []) 4)) 2))
1 : (take 1 (2 : (3 : (ins (5 : []) 4)) 2))

## Ignoring the rest part
1 : 2 : (take 0 (ins (ins (ins [] 5) 3) 4))
1 : 2 : []
